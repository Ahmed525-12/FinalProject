@using WebApplication1.ViewModel
@model CombinedHomeScreen
@{
    ViewData["Title"] = "Home Page";
}

<div class="row pb-5">
    <div class="col-lg-6 col-md-6 col-sm-12 text-center">
        <!-- Display User information -->
       
        <h1 class="head-auth">Hello and Welcome @Model.UserVM.DisplayName</h1>
        <!-- Add other user properties as needed -->
    
    </div>
    <div class="col-lg-6 col-md-6 col-sm-12 text-center">
        <!-- Display User information -->
       
        <h1 class="head-auth"> your total expense :<span><h1 class="head-auth">@Model.UserVM.TotalExpense</h1> </span></h1>

    </div>

</div>
<br />
<hr />
@if (Model.UserVM != null && Model.UserVM.TotalExpense.HasValue && Model.SaveGoalVM != null && Model.SaveGoalVM.Any())
{
    foreach (var saveGoal in Model.SaveGoalVM)
    {
        int? totalExpense = Model.UserVM.TotalExpense;
        int targetAmount = saveGoal.TargetAmount;

  
        double progressPercentage = (double)totalExpense / targetAmount;
        var calacprogress = progressPercentage * 100;

        <div class="mb-3">
            <p class="head-auth">Goal: @saveGoal.TitleGoal</p>


            <div class="progress">
                <div class="progress-bar" role="progressbar" style="width: @calacprogress%;" aria-valuenow="@calacprogress" aria-valuemin="0" aria-valuemax="100">
                    @calacprogress%
                </div>
            </div>
        </div>
    }
}
else
{
    <p>No save goals or data available for the progress bars.</p>
}
<br />
<hr />
@if (Model.MonthOfExpenseVM.Any())
{
    <h3 class="head-auth">Total Spent</h3>

    <canvas id="myChart" width="400" height="300"></canvas>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var labels = [];
        var data = [];

        @foreach (var monthOfExpense in Model.MonthOfExpenseVM)
        {
            @:labels.push('@monthOfExpense.numOfMonth');
            @:data.push(@monthOfExpense.TotalAmountMoney);
        }

            // Add TotalExpense to the dataset
            labels.push('Total Expense');
        data.push(@Model.UserVM.TotalExpense);

        var backgroundColors = [
            'rgba(75, 192, 192, 0.5)', // Default color for other bars
            '#A5DD9B'   // Color for Total Expense bar
        ];

        var borderColor = [
            'rgba(75, 192, 192, 1)', // Default border color for other bars
            '#114232'   // Border color for Total Expense bar
        ];

        var ctx = document.getElementById('myChart').getContext('2d');

        var myChart = new Chart(ctx, {
            type: 'polarArea',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Total Spent',
                    data: data,
                    backgroundColor: backgroundColors,
                    borderColor: borderColor,
                    borderWidth: 1
                }]
            },
            options: {
                onComplete: () => {
                    delayed = true;
                },
                delay: (context) => {
                    let delay = 0;
                    if (context.type === 'data' && context.mode === 'default' && !delayed) {
                        delay = context.dataIndex * 300 + context.datasetIndex * 100;
                    }
                    return delay;
                },
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Chart.js Line Chart'
                    }
                }
            }
        }

               
        );
    </script>
}
else
{
    <p>No month of expenses found.</p>
}











